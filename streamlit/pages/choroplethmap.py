import streamlit as st
import folium
from streamlit_folium import st_folium

import pandas as pd
import pyarrow.dataset as ds
import s3fs

import json
from dotenv import load_dotenv
import os

import plotly.express as px
import plotly.graph_objects as go
import geopandas as gpd



st.set_page_config(page_title="Choropleth Map", page_icon="üó∫Ô∏è")

st.title("‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà‡∏°‡∏•‡∏û‡∏¥‡∏©‡∏£‡∏≤‡∏¢‡∏≠‡∏≥‡πÄ‡∏†‡∏≠ (Choropleth)")

load_dotenv()
ACCESS_KEY = os.getenv("LAKEFS_ACCESS_KEY")
SECRET_KEY = os.getenv("LAKEFS_SECRET_KEY")
lakefs_endpoint = os.getenv("LAKEFS_ENDPOINT", "http://lakefs-dev:8000")

fs = s3fs.S3FileSystem(
    key=ACCESS_KEY,
    secret=SECRET_KEY,
    client_kwargs={'endpoint_url': lakefs_endpoint}
)

BASE_DIR = os.getcwd()

### Function ____________________

# ‡πÇ‡∏´‡∏•‡∏î GeoJSON
@st.cache_data
def load_geojson(geojson_path):
    with open(geojson_path, "r", encoding="utf-8") as f:
        return json.load(f)

# ‡πÇ‡∏´‡∏•‡∏î Data
@st.cache_data
def load_data(lakefs_path):
    dataset = ds.dataset(
        lakefs_path,
        format="parquet",
        partitioning=["year", "month", "day", "hour"],
        filesystem=fs
    )
    table = dataset.to_table()
    df = table.to_pandas()
    
    return df


# weather_path = 's3a://weather-data/main/weather.parquet'
# weather_df = load_data(weather_path)

# @st.cache_data
# def load_weather_data():

#     return df


####________________________________

# geojson_path = os.path.join(BASE_DIR, "save", "gadm41_THA_2.json")

# pollution_path = 'pollution-data/main/pollution.parquet'
# pollution_df = load_data(pollution_path)
# pollution_df = pollution_df.rename(columns={"components_pm2_5": "pm25"})
# st.write('Pollution')
# st.write(pollution_df)
# st.write()



# province_geojson_path = os.path.join(BASE_DIR, "save", "gadm41_THA_1.json")
# province_geojson = load_geojson(province_geojson_path)

# district_geojson_path = os.path.join(BASE_DIR, "save", "gadm41_THA_2.json")
# district_geojson = load_geojson(district_geojson_path)

####________________________________
# 1. ‡πÇ‡∏´‡∏•‡∏î GeoJSON ‡∏≠‡∏≥‡πÄ‡∏†‡∏≠
# district_geojson_path = os.path.join(BASE_DIR, "save", "gadm41_THA_2.json")
# district_geojson = load_geojson(district_geojson_path)
# with open("../work/save/gadm41_THA_2.json", "r", encoding="utf-8") as f:
#     amphoe_geojson = json.load(f)

# st.write(amphoe_geojson)
# st.write(len(amphoe_geojson))

# 2. ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡πà‡∏≤‡∏°‡∏•‡∏û‡∏¥‡∏© (‡πÄ‡∏ä‡πà‡∏ô pm2.5) ‡∏£‡∏≤‡∏¢‡∏≠‡∏≥‡πÄ‡∏†‡∏≠
# ‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå: "amphoe_code" (‡∏´‡∏£‡∏∑‡∏≠‡∏£‡∏´‡∏±‡∏™‡∏≠‡∏≥‡πÄ‡∏†‡∏≠‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö GeoJSON) ‡πÅ‡∏•‡∏∞ "pm25"
# df = pd.read_parquet("save/f65bb697be7843fd9e092d83f914065f-0.parquet", engine="pyarrow")
coord_path = os.path.join(BASE_DIR, "save", "district_coord.csv")
data_path = os.path.join(BASE_DIR, "save", "bd5d4217b47743f2b597ac5cd8293ba0-0.parquet")

df_code = pd.read_csv(coord_path)
df = pd.read_parquet(data_path)

# ‡πÅ‡∏™‡∏î‡∏á‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•

df_code = df_code.rename(columns={"district_en":"district"})
# st.dataframe(df.head())
# st.dataframe(df_code.head())

df = pd.merge(
    df,
    df_code[["district", "district_id"]],
    on="district",
    how="left"  # ‡πÉ‡∏ä‡πâ 'left' ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• df ‡∏´‡∏•‡∏±‡∏Å‡πÑ‡∏ß‡πâ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
)

# merge ‡∏ù‡∏∏‡πà‡∏ô‡∏Å‡∏±‡∏ö weather
# merged = pd.merge(
#     weather_df,
#     pollution_df,
#     on=["district_id", "flow_timestamp"],
#     how="inner"
# )

# st.dataframe(df.head())
###______________________
# map ‡∏ï‡∏±‡∏ß‡∏ó‡∏µ‡πà‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î

# BASE_DIR = os.path.abspath(os.path.join(os.getcwd(), ".."))
# district_geojson_path = os.path.join(BASE_DIR, "save", "gadm41_THA_2.json")

# district_geojson_path = os.path.join(BASE_DIR, "save", "gadm41_THA_2.json")
# district_geojson = load_geojson(district_geojson_path)
# st.write('district_geojson')
# st.write(district_geojson_path)
# st.write(district_geojson.keys())

geojson_path = os.path.join(BASE_DIR, "save", "gadm41_THA_2.json")
st.write('geojson_path')
st.write(geojson_path) #/app/save/gadm41_THA_2.json
gdf = gpd.read_file(geojson_path)
st.dataframe(gdf.head())

district_id_map = {
    ("BuengKan", "BungKan"): "3801",
    ("BuengKan", "BungKhongLong"): "3806",
    ("BuengKan", "K.BungKhla"): "3808",
    ("BuengKan", "PakKhat"): "3805",
    ("BuengKan", "PhonCharoen"): "3802",
    ("BuengKan", "Seka"): "3804",
    ("BuengKan", "SiWilai"): "3807",
    ("BuengKan", "SoPhisai"): "3803",
    ("Chanthaburi", "MuangChanthaburi"): "2201",
    ("KhonKaen", "WiangKao"): "4029"
}

def map_district_id(row):
    return district_id_map.get((row["NAME_1"], row["NAME_2"]), None)

gdf["district_id"] = gdf.apply(map_district_id, axis=1)

# changed = gdf[gdf["district_id"].notna()]
# print("‡∏≠‡∏≥‡πÄ‡∏†‡∏≠‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï:", changed[["NAME_1", "NAME_2", "CC_2"]])

# ‡πÄ‡∏≠‡∏≤‡∏Ñ‡πà‡∏≤‡πÉ‡∏´‡∏°‡πà (district_id ‡∏à‡∏≤‡∏Å mapping) ‡πÑ‡∏õ‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà‡∏Ñ‡πà‡∏≤‡πÉ‡∏ô CC_2 ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÅ‡∏ñ‡∏ß‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà None
gdf["CC_2"] = gdf["district_id"].combine_first(gdf["CC_2"])

# ‡∏à‡∏≤‡∏Å‡∏ô‡∏±‡πâ‡∏ô‡∏•‡∏ö column ‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß
gdf = gdf.drop(columns=["district_id"])
# gdf[gdf["NAME_1"] == "BuengKan"]



# 3. ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà Folium
m = folium.Map(location=[13.5, 100.7], zoom_start=6)

# 4. ‡∏™‡∏£‡πâ‡∏≤‡∏á Choropleth map
folium.Choropleth(
    geo_data=gdf, # ‡πÑ‡∏ü‡∏•‡πå geojson
    data=df,
    columns=["district_id", "components_pm2_5"],  # ‡∏£‡∏´‡∏±‡∏™‡∏≠‡∏≥‡πÄ‡∏†‡∏≠ ‡πÅ‡∏•‡∏∞‡∏Ñ‡πà‡∏≤
    key_on="feature.properties.CC_2",  # ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ï‡∏≤‡∏°‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á GeoJSON
    fill_color="YlOrRd",
    fill_opacity=0.8,
    line_opacity=0,
    legend_name="PM2.5 (¬µg/m¬≥)",
).add_to(m)

# Optional: ‡πÉ‡∏™‡πà popup ‡∏ä‡∏∑‡πà‡∏≠‡∏≠‡∏≥‡πÄ‡∏†‡∏≠
folium.GeoJson(
    gdf,
    name="‡∏≠‡∏≥‡πÄ‡∏†‡∏≠",
    tooltip=folium.GeoJsonTooltip(
        fields=["NAME_2"],
        aliases=["‡∏≠‡∏≥‡πÄ‡∏†‡∏≠:"],
        localize=True
    )
).add_to(m)

# 5. ‡πÅ‡∏™‡∏î‡∏á‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏ô Streamlit
st_folium(m, height=700)


####_______
# ‡∏î‡∏∂‡∏á‡∏£‡∏´‡∏±‡∏™‡∏≠‡∏≥‡πÄ‡∏†‡∏≠‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏à‡∏≤‡∏Å gdf
geo_ids = set(gdf["CC_2"].astype(str))
st.write(f"‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏£‡∏´‡∏±‡∏™‡∏≠‡∏≥‡πÄ‡∏†‡∏≠‡πÉ‡∏ô GeoDataFrame: {len(geo_ids)}")
st.dataframe(sorted(geo_ids))

# ‡∏î‡∏∂‡∏á‡∏£‡∏´‡∏±‡∏™‡∏≠‡∏≥‡πÄ‡∏†‡∏≠‡∏ó‡∏µ‡πà‡∏°‡∏µ‡πÉ‡∏ô df (‡∏Ñ‡πà‡∏≤‡∏ù‡∏∏‡πà‡∏ô)
df_ids = set(df["district_id"].dropna().astype(int).astype(str))
st.write(f"‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏£‡∏´‡∏±‡∏™‡∏≠‡∏≥‡πÄ‡∏†‡∏≠‡πÉ‡∏ô DataFrame ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ù‡∏∏‡πà‡∏ô: {len(df_ids)}")
st.dataframe(sorted(df_ids))

# ‡∏´‡∏≤‡∏≠‡∏≥‡πÄ‡∏†‡∏≠‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• (‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô geo ‡πÅ‡∏ï‡πà‡πÑ‡∏°‡πà‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô df)
missing_ids = geo_ids - df_ids
st.write(f"‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏≠‡∏≥‡πÄ‡∏†‡∏≠‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡πà‡∏≤‡∏ù‡∏∏‡πà‡∏ô: {len(missing_ids)}")
st.write(sorted(missing_ids))

# ‡∏î‡∏∂‡∏á‡∏ä‡∏∑‡πà‡∏≠‡∏≠‡∏≥‡πÄ‡∏†‡∏≠-‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î‡∏Ç‡∏≠‡∏á‡∏≠‡∏≥‡πÄ‡∏†‡∏≠‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
missing_rows = gdf[gdf["CC_2"].astype(str).isin(missing_ids)]

missing_names = [
    f"{row['CC_2']} - {row['NAME_1']} - {row['NAME_2']}"
    for _, row in missing_rows.iterrows()
]

# ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•
st.markdown(f"### ‚ùå ‡∏≠‡∏≥‡πÄ‡∏†‡∏≠‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡πà‡∏≤‡∏ù‡∏∏‡πà‡∏ô (pm2.5): {len(missing_names)} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£")
st.write(missing_names)


###
#‡∏°‡∏µ ‡πÄ‡∏•‡∏Ç‡πÑ‡∏°‡πà‡∏ï‡∏£‡∏á
# 0:"4303 - BuengKan - BungKan"
# 1:"4311 - BuengKan - BungKhongLong"
# 2:"4313 - BuengKan - K.BungKhla"
# 3:"4310 - BuengKan - PakKhat"
# 4:"4304 - BuengKan - PhonCharoen"
# 5:"4309 - BuengKan - Seka"
# 6:"4312 - BuengKan - SiWilai"
# 7:"4306 - BuengKan - SoPhisai"

# ‡∏°‡∏µ ‡πÅ‡∏°‡∏û‡πÄ‡∏•‡∏Ç
# 9:"#N/A - Chanthaburi - MuangChanthaburi"
# 11:"NA - KhonKaen - WiangKao"

#‡πÑ‡∏°‡πà‡∏°‡∏µ
# 8:"3123 - BuriRam - Chalermphrakiet"
# 10:"8608 - Chumphon - ThungTako"
# 12:"3032 - NakhonRatchasima - Chalermphrakiet"
# 13:"8023 - NakhonSiThammarat - Chalermphrakiet"

# ‡∏°‡∏µ recheck
# 14:"NA - Phatthalung - SongkhlaLake" ‡∏Ñ‡∏ß‡∏ô‡∏Ç‡∏ô‡∏∏‡∏ô ‡∏û‡∏±‡∏ó‡∏•‡∏∏‡∏á
# 15:"NA - Songkhla - SongkhlaLake" ‡∏£‡∏∞‡πÇ‡∏ô‡∏î ‡∏™‡∏á‡∏Ç‡∏•‡∏≤


# ‡∏™‡∏£‡πâ‡∏≤‡∏á DataFrame ‡∏à‡∏≤‡∏Å geojson
geo_df = pd.DataFrame([
    {
        "CC_2": feature["properties"]["CC_2"],
        "NAME_1": feature["properties"]["NAME_1"],  # ‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î
        "NAME_2": feature["properties"]["NAME_2"]   # ‡∏≠‡∏≥‡πÄ‡∏†‡∏≠
    }
    for feature in gdf["features"]
])

# ‡∏õ‡∏£‡∏±‡∏ö‡∏ä‡∏ô‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡πÅ‡∏°‡∏û‡∏Å‡∏±‡∏ô‡πÑ‡∏î‡πâ
df["district_id"] = df["district_id"].astype(str)
geo_df["CC_2"] = geo_df["CC_2"].astype(str)

# ‡∏£‡∏ß‡∏°‡∏ï‡∏≤‡∏£‡∏≤‡∏á df ‡∏Å‡∏±‡∏ö geo_df ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏°‡∏õ
mapping_df = pd.merge(
    df,
    geo_df,
    how="outer",  # ‡πÄ‡∏≠‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏™‡∏≠‡∏á‡∏ù‡∏±‡πà‡∏á‡∏°‡∏≤‡∏î‡∏π‡∏Ñ‡∏£‡∏ö
    left_on="district_id",
    right_on="CC_2",
    indicator=True  # ‡∏à‡∏∞‡∏°‡∏µ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå _merge ‡∏ö‡∏≠‡∏Å‡∏ß‡πà‡∏≤‡∏°‡∏≤‡∏à‡∏≤‡∏Å‡∏ù‡∏±‡πà‡∏á‡πÑ‡∏´‡∏ô
)

# ‡πÅ‡∏™‡∏î‡∏á‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå
st.markdown("### üîç Mapping ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏≥‡πÄ‡∏†‡∏≠")
st.dataframe(mapping_df[["district_id", "district", "province", "CC_2", "NAME_2", "NAME_1", "_merge"]])


### ‡πÅ‡∏°‡∏û‡∏ú‡∏¥‡∏î 
# ‡∏´‡∏ô‡∏≠‡∏á‡∏à‡∏≠‡∏Å-‡∏´‡∏ô‡∏≠‡∏á‡πÄ‡∏Ç‡πá‡∏°? ‡πÄ‡∏•‡∏Ç‡∏™‡∏•‡∏±‡∏ö
# ‡∏ä‡∏∑‡πà‡∏≠‡∏ã‡πâ‡∏≥
# 1404 ‡∏ö‡∏≤‡∏á‡πÑ‡∏ó‡∏£ - 1413 ‡∏ö‡∏≤‡∏á‡∏ã‡πâ‡∏≤‡∏¢ # ‡∏ö‡∏≤‡∏á‡∏ã‡πâ‡∏≤‡∏¢‡∏´‡∏≤‡∏¢‡πÑ‡∏õ‡πÄ‡∏Ç‡πâ‡∏≤ 1404
# 1705 ‡∏ó‡πà‡∏≤‡∏ä‡πâ‡∏≤‡∏á
# 1905 nong saeng
# 1913 ‡πÄ‡∏â‡∏•‡∏¥‡∏°‡∏û‡∏£‡∏∞‡πÄ‡∏Å‡∏µ‡∏¢‡∏£
# ‡∏û‡∏∞‡πÄ‡∏¢‡∏≤
# ‡πÄ‡∏£‡∏≤‡∏°‡∏µ ‡∏≠‡∏≥‡πÄ‡∏†‡∏≠ ‡∏ä‡∏∞‡∏≠‡∏ß‡∏î ‡∏ô‡∏Ñ‡∏£‡∏®‡∏£‡∏µ‡∏ò‡∏£‡∏£‡∏°‡∏£‡∏≤‡∏ä ‡πÄ‡∏Ç‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ